Configuration of Validation code in Vcenter
1. Create user 
# useradd validator
# passwd 
===================================================================================================
1. vi /etc/ssh/sshd_config

#Match User anoncvs
Match User validator
   ForceCommand /usr/validation-2025.sh
#       X11Forwarding no
#       AllowTcpForwarding no
        PermitTTY yes
#       ForceCommand cvs server

===========================================================================================================
2. vi /usr/validation-2025.sh

#!/bin/bash

# Ask for user name
read -p "Enter your username: " USER_NAME
USER_NAME=$(echo "$USER_NAME" | xargs)

if [ -z "$USER_NAME" ]; then
    echo "Error: User ID/Name is required to continue."
    exit 1
fi

# Ask for student machine IP
read -p "Enter your machine IP address: " MACHINE_IPV4
MACHINE_IPV4=$(echo "$MACHINE_IPV4" | xargs)

if [ -z "$MACHINE_IPV4" ]; then
    echo "Error: Machine IPV4 is required to continue."
    exit 1
fi

# Ask for lab number
read -p "Enter lab number to validate ( 1, 2, 3, R1, 5, 6, R2, R3, 7, 8, 9, 10, linux_test): " LAB_NUMBER
LAB_NUMBER=$(echo "$LAB_NUMBER" | xargs)

if [ -z "$LAB_NUMBER" ]; then
  echo "Error: Lab number is required."
  exit 1
fi

# === DO NOT source or run any validation locally on serverb ===
# The validation code must run on servera (student machine).

# Ensure validator SSH key exists on serverb
if [ ! -f "$HOME/.ssh/id_rsa.pub" ]; then
  echo "Generating SSH key for validator on serverb..." >/dev/null
  ssh-keygen -t rsa -b 2048 -f "$HOME/.ssh/id_rsa" -N "" >/dev/null
fi

# Install key to student's machine (servera)
echo "Sit tight validation of your Linux_CLI_test-2025 is in process. Goodluck....."
if ! ssh-copy-id -i "$HOME/.ssh/id_rsa.pub" "$USER_NAME@$MACHINE_IPV4" >/dev/null 2>&1; then
  echo "Error: Could not copy SSH key to $USER_NAME@$MACHINE_IPV4. Is SSH running and password correct?"
  exit 1
fi

# Quick connectivity check
if ! ssh -o BatchMode=yes -o ConnectTimeout=5 "$USER_NAME@$MACHINE_IPV4" "echo ok" >/dev/null 2>&1; then
  echo "Error: Cannot reach your lab machine ($MACHINE_IPV4)."
  exit 1
fi

# --- Ship the private validation library to servera TEMPORARILY ---
# We copy to a randomized /tmp path and delete it after execution so students can't keep it.
REMOTE_LIB="/tmp/lab-test-2025.$RANDOM.$$"
scp -q /usr/.lab/lab-test-2025.sh "$USER_NAME@$MACHINE_IPV4:$REMOTE_LIB"

# --- Run the validation ON servera and then clean up the library ---
ssh -o StrictHostKeyChecking=no "$USER_NAME@$MACHINE_IPV4" bash -s -- "$USER_NAME" "$LAB_NUMBER" "$REMOTE_LIB" << REMOTE_RUN
#!/bin/bash

USER_NAME="\$1"
LAB_NUMBER="\$2"
REMOTE_LIB="\$3"

export STUDENT_NAME="\$USER_NAME"

# --- Ensure required directories exist ---
mkdir -p /tmp/.syslog_csv
mkdir -p /tmp/.syslog_table

# Load validation functions
source "\$REMOTE_LIB"

# Run selected lab (do NOT exit early if one fails)
set +e

# Select and run the requested lab ON server
case "\$LAB_NUMBER" in
  1)  check_lab1_navigation ;;
  2)  check_lab2_navigation ;;
  3)  check_lab3_navigation ;;
  R1) check_Review_lab1_2025 ;;
  5)  check_lab5_permissions ;;
  6)  check_lab6_ownership ;;
  R2) check_review_lab2 ;;
  R3) check_review_lab3 ;;
  7)  check_lab7_find ;;
  8)  check_lab8_grep_wc ;;
  9)  check_lab9_link_mgt ;;
  10) check_lab10_tar ;;
linux_test) check_Linux_CLI_test_2025 ;;
  *)  echo -e "\e[33mInvalid lab number. Enter 1,2,3,R1,5,6,R2,R3,7,8,9,10,linux_test\e[0m"; exit 2 ;;
esac

# Remove private validation lib
rm -f "\$REMOTE_LIB" || true
REMOTE_RUN

# --- After remote validation run finishes ---

     #Define master result file on serverb
     MASTER_RESULT="/tmp/.systemdir/csv/${LAB_NUMBER}_results.csv"
     MASTER_RESULT_TAB="/tmp/.systemdir/table/${LAB_NUMBER}_results_table.txt"

     # Temporary file name for this run
     TMP_RESULT="/tmp/.systemdir/remote_csv/${USER_NAME}_${LAB_NUMBER}_$(date +%s).csv"
     TMP_RESULT_TAB="/tmp/.systemdir/remote_table/${USER_NAME}_${LAB_NUMBER}_table_$(date +%s).txt"

     # Step 1: Copy result file from servera -> serverb
     scp -q "$USER_NAME@$MACHINE_IPV4:/tmp/.syslog_csv/${LAB_NUMBER}_result.csv" "$TMP_RESULT"
     scp -q "$USER_NAME@$MACHINE_IPV4:/tmp/.syslog_table/${LAB_NUMBER}_result_table.txt" "$TMP_RESULT_TAB"

  if [ $? -eq 0 ]; then
       chmod 666 "$TMP_RESULT"

     # Step 2: Append to master CSV (create if not exists)
     if [ ! -f "$MASTER_RESULT" ]; then
         head -n 1 "$TMP_RESULT" > "$MASTER_RESULT"
     fi
     tail -n +2 "$TMP_RESULT" >> "$MASTER_RESULT"

     if [ ! -f "$MASTER_RESULT_TAB" ]; then
         head -n 4 "$TMP_RESULT_TAB" > "$MASTER_RESULT_TAB"
     fi
     tail -n +5 "$TMP_RESULT_TAB" >> "$MASTER_RESULT_TAB"


     # Step 3: Cleanup temp file on serverb
     rm -rf "$TMP_RESULT"
     rm -rf "$TMP_RESULT_TAB"

     # Step 4: Cleanup result file from servera
     ssh -o StrictHostKeyChecking=no "$USER_NAME@$MACHINE_IPV4" "rm -rf /tmp/.syslog_csv /tmp/.syslog_table"
 fi

===============================================================================================================

3. vi /usr/.lab/lab-test-2025.sh

===============================================================================================================

4. Make directory structure in /tmp

# mkdir /tmp/.systemdir
# ls -ld /tmp/.systemdir/
drwxrwxrwx. 7 validator validator 4096 Sep 11 17:46 .
# ls -l /tmp/.systemdir
total 64
drwxrwxrwx. 2 validator validator   36 Sep 11 17:50 csv
-rw-rw-rw-. 1 validator validator 5928 Sep  7 02:06 lab10_results.csv
-rw-rw-rw-. 1 validator validator 6537 Sep  6 09:35 lab1_results.csv
-rw-rw-rw-. 1 validator validator 5366 Sep  5 22:57 lab2_results.csv
-rw-rw-rw-. 1 validator validator 4386 Sep  6 15:51 lab3_results.csv
-rw-rw-rw-. 1 validator validator 1779 Sep  6 22:26 lab5_results.csv
-rw-rw-rw-. 1 validator validator 1462 Sep  6 22:52 lab6_results.csv
-rw-rw-rw-. 1 validator validator 3382 Sep  6 09:57 lab7_results.csv
-rw-rw-rw-. 1 validator validator 1821 Sep  6 17:48 lab8_results.csv
-rw-rw-rw-. 1 validator validator 1360 Sep  7 01:31 lab9_results.csv
-rw-rw-rw-. 1 validator validator  246 Sep  6 23:40 labR2_results.csv
-rw-rw-rw-. 1 validator validator  839 Sep  2 13:50 labR3_results.csv
drwxrwxrwx. 2 validator validator 4096 Sep 11 17:45 remote
drwxrwxrwx. 2 validator validator    6 Sep 12 12:32 remote_csv
drwxrwxrwx. 2 validator validator    6 Sep 12 12:32 remote_table
drwxrwxrwx. 2 validator validator   76 Sep 12 00:47 table

================================================================================
# ls -l /tmp/.systemdir/csv
total 4
-rw-rw-r--. 1 validator validator 949 Sep 12 12:32 linux_test_results.csv

# ls -l /tmp/.systemdir/table
total 8
-rwxr-xr-x. 1 root      root      1996 Sep 11 21:56 convert_results_to_html.sh
-rw-rw-r--. 1 validator validator 1119 Sep 12 12:32 linux_test_results_table.txt


# mkdir /tmp/.systemdir/remote
# ls -ld /tmp/.systemdir/remote/
drwxrwxrwx. 2 validator validator 6 Aug 26 21:38 /tmp/.systemdir/remote/
# ls -ld remote_csv/
drwxrwxrwx. 2 validator validator 6 Sep 12 12:32 remote_csv/
# ls -ld remote_table
drwxrwxrwx. 2 validator validator 6 Sep 12 12:32 remote_table
